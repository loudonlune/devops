---

# This is a default vars file based off of the behavior of the original installer script.
# It attempts to grab all variables from the environment, or initialzes them to their default if not present.

# There is a schema for this config file for your convenience.
# Advanced text editors and IDEs can use this to do autocomplete and error-checking.
# It is located in the repository at "ansible/install_vars_schema.json"


# Set this variable to the absolute path of a local configuration file.
# It will be copied onto the remote system, and then loaded into the Ansible SSH session env.
# Accomplished using this: https://docs.ansible.com/ansible/latest/collections/ansible/builtin/raw_module.html
agent_install: test.env

# If true, exports this config with populated secrets using the imported vault secret.
export_data: false

# If true, uninstalls the management hub.
# This is a destructive operation.
uninstall: false

hzn_mgmt_hub:
  sources:
    devops_repo: https://raw.githubusercontent.com/open-horizon/devops/master
    anax_releases: https://github.com/open-horizon/anax/releases/latest/download
    anax_mac_pkg_tar: 'horizon-agent-macos-pkg-{{ ansible_architecture }}.tar.gz'
    anax_deb_pkg_tar: 'horizon-agent-linux-deb-{{ ansible_architecture }}.tar.gz'
    anax_rpm_pkg_tar: 'horizon-agent-linux-rpm-{{ ansible_architecture }}.tar.gz'
    examples_repo: https://github.com/open-horizon/examples.git

  config:
    start_second_agbot: false
    # "Passed into the agbot containers"
    anax_log_level: "-3"
    compose_project_name: hzn
    hc_docker_tag: latest

  sdo:
    config:
      ocs_db_path: '/home/sdouser/ocs/config/db'
      get_pkgs_from: 'https://github.com/open-horizon/anax/releases/latest/download'
      get_cfg_file_from: 'css'
    docker:
      image_name: 'openhorizon/sdo-owner-services'
      image_tag: 'latest'
    net:
      ocs_api_port: '9008'
      rv_port: '8040'
      ops_port: '8042'
      ops_external_port: "8042"
  agent:
    config:
      wait_iterations: '15'
      wait_interval: '2'

  vault:
    config:
      auth_plugin_exchange: 'openhorizon-exchange'
      disable_tls: true
      log_level: info
      seal_secret_shares: true
      seal_secret_threshold: true
      secrets_engine_name: 'openhorizon'

    secrets:
      root_token: null
      unseal_key: null

    
    docker:
      image_name: null
      image_tag: 'latest'
    
    net:
      port: '8200'
      dev_listen_address: '0.0.0.0:8200'

  mongo: 
    docker:
      image_name: 'mongo'
      image_tag: 'latest'
    net:
      port: '27017'

  postgres:
    config:
      user: 'admin'
    docker:
      image_name: 'postgres'
      image_tag: '13'
    net:
      port: '5432'

  css:
    config:
      persistence_path: '/var/edge-sync-service/persist'
      log_level: INFO
      log_trace_destination: stdout
      log_root_path: '/var/edge-sync-service/log'
      trace_level: INFO
      trace_root_path: '/var/edge-sync-service/trace'
      mongo_auth_db_name: 'admin'
    docker:
      image_name: null
      image_tag: 'latest'
    net:
      port: '9443'
      internal_port: '8080'

  exchange:
    # General settings for the exchange container.
    config:
      log_level: INFO
      system_org: IBM
      user_org: 'myorg'
      wait_iterations: '30'
      wait_interval: '2'
      database: 'exchange'
      internal_retries: '12'
      internal_interval: '5'

    # Secrets for the exchange container. When set to null, they will be generated.
    secrets:
      # These keys can not be generated by Ansible.
      # Either set them to known values, or do not provide them.
      # root_pw: null
      # root_pw_bcrypted: null
      system_admin_pw: null
      hub_admin_pw: null
      user_admin_pw: null

    # Docker settings for the exchange container. When set to null, they will be generated.
    docker:
      image_name: null
      image_tag: 'latest'

    # Network settings for the exchange container.
    net:
      port: '3090'

  hzn:
    config:
      transport: 'http'
      vault_url: "http://{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}:8200"
      device_id: "{{ inventory_hostname }}"

    # Secrets for horizon
    secrets:
      device_token: null

    net:
      listen_ip: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"

  agbot:
    config:
      # For descriptions for these values in agbot: 
      #   https://github.com/open-horizon/anax/blob/40bb7c134f7fc5d1699c921489a07b7ec220c89c/config/config.go#L80
      agreement_timeout_s: '360'
      new_contract_interval_s: '5'
      process_governance_interval_s: '5'
      exchange_heartbeat: '5'
      check_updated_policy_s: '7'
      agreement_batch_size: '300'
      retry_look_back_window: '3600'
      mms_garbage_collection_interval: '20'
      database: 'exchange'

    secrets:
      token: null
    docker:
      image_name: null
      image_tag: 'latest'
    net: 
      internal_port: '8080'
      internal_secure_port: '8083'
      port: '3110'
      secure_port: '3111'

  agbot2:
    port: '3120'
    secure_port: '3121'

hzn_groups: []
hzn_users: []