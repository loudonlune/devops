---

- name: Ensure pip is installed
  ansible.builtin.apt:
    state: present
    name: python3-pip
  when: ansible_distribution in [ 'Debian', 'Ubuntu' ]

- name: Install dependencies
  ansible.builtin.pip:
    state: present
    name: python-dotenv

# Copy the environment file to the remote system (if it exists).
- name: Copy environment to destination
  ansible.builtin.copy:
    decrypt: true
    mode: '0644'
    src: '{{ agent_install }}'
    dest: '{{ agent_install }}'
  when: agent_install is defined and agent_install != None

# - name: Copy management hub script to destination
#   ansible.builtin.copy:
#     src: deploy-mgmt-hub.sh
#     dest: deploy-mgmt-hub.sh

# Generate an agent-install.cfg file from environment and YAML variables.
- name: Generate environment for install
  load_env_config:
    ansible_facts: "{{ ansible_facts }}"
    mgmt_hub: '{{ hzn_mgmt_hub }}'
    env_file: '{{ agent_install }}'
  register: install_config

# Write the agent-install.cfg file to disk.
- name: Write finalized environment file to disk.
  ansible.builtin.copy:
    mode: '0644'
    content: "{{ install_config.env_script }}"
    dest: agent-install.cfg

  # The next two steps are mutually exclusive.

  # Installs the management hub (if fails, shuts down the hub)
- name: Installation of the management hub
  block:
  - name: Create environment dumpfile
    ansible.builtin.tempfile:
      state: directory
      prefix: openhorizon
      suffix: secrets
    register: secrets_workdir

  - name: Copy script from local
    ansible.builtin.copy:
      src: deploy-mgmt-hub.sh
      dest: deploy-mgmt-hub.sh

    # Execute the installer script in the current shell session, then yak up the environment and store in a file
  - name: Execute installer script
    ansible.builtin.shell:
      executable: /bin/bash 
      cmd: "source deploy-mgmt-hub.sh -c agent-install.cfg && env > {{ secrets_workdir.path }}/postinstall_env"

    # Get the current configuration of the system, and place it into the install_config var
  - name: Generate final config output
    load_env_config:
      ansible_facts: "{{ ansible_facts }}"
      mgmt_hub: "{{ hzn_mgmt_hub }}"
      env_file: "{{ secrets_workdir.path }}/postinstall_env"
    register: install_config

    # Clean up the secrets
  - name: Delete tempdir
    ansible.builtin.file:
      path: '{{ secrets_workdir.path }}'
      state: absent
  # If the installation fails above, shut down the containers.
  rescue:
  - name: Stop containers
    ansible.builtin.script: deploy-mgmt-hub.sh -c agent-install.cfg -S
  - name: Force failure
    ansible.builtin.fail:
     msg: "Failed to install or start the management hub containers."
  when: not uninstall

  # Uninstalls the management hub
- name: Uninstallation of the management hub
  ansible.builtin.script: deploy-mgmt-hub.sh -c agent-install.cfg -S -P
  when: uninstall

  # Optionally export variables
- name: Post-install steps
  when: not uninstall
  block:
  - name: Export variables
    ansible.builtin.copy:
      content: '{{ install_config.hzn_mgmt_hub | to_nice_yaml }}'
      dest: "{{ ansible_env.HOME }}/mgmt_hub_configuration.yml"
  # - name: Link to ansible facts dir
  #   ansible.builtin.file:
  #     src: "{{ ansible_env.HOME }}/mgmt_hub_configuration.yml"
  #     path: /etc/ansible/facts.d/mgmt_hub.yml
  #     state: link
