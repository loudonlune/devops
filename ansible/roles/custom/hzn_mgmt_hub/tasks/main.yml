---
# tasks file for hzn-mgmt-hub

- name: Ensure pip is installed
  ansible.builtin.apt:
    state: present
    name: python3-pip
  when: ansible_distribution in [ 'Debian', 'Ubuntu' ]

- name: Install dependencies
  ansible.builtin.pip:
    state: present
    name: python-dotenv

# Copy the environment file to the remote system (if it exists).
- name: Copy agent install to destination
  ansible.builtin.copy:
    decrypt: true
    mode: '0644'
    src: '{{ agent_install }}'
    dest: '{{ agent_install }}'
  when: agent_install is defined and agent_install != None

- name: Copy administrator environment to destination
  ansible.builtin.copy:
    decrypt: true
    mode: '0600'
    src: '{{ administrator_env }}'
    dest: '{{ administrator_env }}'
  when: administrator_env is defined and administrator_env != None

- name: Copy management hub script to destination
  ansible.builtin.copy:
    mode: '0755'
    src: deploy-mgmt-hub.sh
    dest: deploy-mgmt-hub.sh

# Generate an agent-install.cfg file from environment and YAML variables.
- name: Generate environment for install
  load_env_config:
    ansible_facts: "{{ ansible_facts }}"
    mgmt_hub: '{{ hzn_mgmt_hub }}'
    env_file: '{{ administrator_env }}'
    agent_install: '{{ agent_install }}'
  register: install_config

# Write the agent-install.cfg file to disk.
- name: Write agent-install.cfg to disk.
  ansible.builtin.copy:
    mode: '0644'
    content: "{{ install_config.agent_install }}"
    dest: agent-install.cfg

- name: Write administrator.env to disk.
  ansible.builtin.copy:
    mode: '0600'
    content: "{{ install_config.administrator_env }}"
    dest: administrator.env

- name: Install or uninstall the management hub
  import_tasks: install.yml
  when: install or uninstall

- name: Upgrade the management hub
  import_tasks: upgrade.yml
  when: upgrade

# - name: Run user and group management
#   import_tasks: user_mgmt.yml
#   when: not uninstall and exchange_config is defined